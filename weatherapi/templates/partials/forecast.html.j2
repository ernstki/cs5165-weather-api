<!--
This homework assignment will have you implement an UI for HW2 with a
dynamic approach that uses asynchronous JavaScript requests to send the
user-inputted data to the ReST API you built, receive the structured results,
and then publish them into the page without refreshing the whole page again.

The Webpage should take an input date and then plot the Forecasts TMIN, TMAX
for atl Next Five Days.

BONUS 25 Points: Also, Plot weather forecast for at least 5 DAYS from a Third
Party Weather Forecasting Service such as Yahoo Weather, NCDC, Weather
Underground, Weather, Open Weather Map,
-->
    <div id="weatherSearch" class="container">

      <div class="row">

        <!-- input form -->
        <div id="weatherSearchForm" class="col-md-4">
          <h2>Forecast by date</h2>

          <div class="form-group"
               v-bind:class="getDateFailed ? 'has-error' : ''">
            <div class="input-group">
              <input type="text" class="form-control input-lg"
                     placeholder="Ex. 20130101"
                     v-model="inputDate" v-on:keyup.enter.stop="onEnter"
                     v-on:keydown="enableResetButton">

              <span class="input-group-btn">
                <template v-if="spinButtonsEnabled">
                  <button v-bind:disabled="!resetEnabled"
                          class="btn btn-lg btn-default"
                          v-on:click="resetForm">
                    <i class="glyphicon glyphicon glyphicon-step-backward"></i>
                  </button>
                  <button v-bind:disabled="!resetEnabled"
                          class="btn btn-lg btn-default"
                          v-on:click="resetForm">
                    <i class="glyphicon glyphicon glyphicon-step-forward"></i>
                  </button>
                </template>

                <button v-bind:disabled="!resetEnabled"
                        class="btn btn-lg btn-default"
                        v-on:click="resetForm">
                  <i class="glyphicon glyphicon-remove-circle"></i>
                </button>
              </span>
            </div>
            <template v-if="getDateFailed">
              <p class="help-block">
                Error retrieving date <span v-text="inputDate"></span>
              </p>
            </template>
            <!--v-select label="date" placeholder="Search dates..." :debounce="250"
                      :options="dates" :on-search="getDates"-->
          </div> <!--/.form-group-->
          <!-- /input form -->

          <div class="well">
            <table class="table table-hover">
              <thead>
                <tr><th>Date</th><th>Max. Temp</th><th>Min. Temp</th></tr>
              </thead>
              <tbody>
                <tr v-for="date in forecastDates">
                  <td class="date-date" v-text="date.DATE"></td>
                  <td class="date-tmin" v-text="date.TMIN"></td>
                  <td class="date-tmax" v-text="date.TMAX"></td>
                </tr>
              </tbody>
            </table>

            <button class="btn btn-primary pull-right"
                    v-on:click="loadSampleData">
              Load Sample Data
            </button>
            <div class="clearfix"></div>
          </div> <!--/.well-->

        </div> <!--/#weatherSearchForm-->

        <div class="col-md-1"></div>

        <div id="weatherSearchGraph" class="col-md-7 text-center">
          <h2>Five-day Highs &amp; Lows</h2>
          <canvas id="five-day-forecast" width="400" height="300"
                  no-v-bind:style="chartDimmed ? 'opacity:0.5' : 'opacity:1.0'">
          </canvas>
        </div>

      </div><!-- /.row -->

    </div><!-- /#weatherSearch.container -->


{{ asset.vendorjs('vue/dist/vue.js')}}
{{ asset.vendorjs('vue-resource/dist/vue-resource.min.js')}}
{{ asset.vendorjs('lodash/dist/lodash.min.js')}}
{{ asset.vendorjs('chart.js/dist/Chart.min.js') }}
{# asset.unpkg('vue-select') #}

<script>

  var ctx = document.getElementById("five-day-forecast");

  var chart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: [0, 1, 2, 3, 4],
      datasets: [
        {
          label: 'Low Temperatures',
          data: [15, 25, 35, 45, 55],
          backgroundColor: '#36a2eb',
        },
        {
          label: 'High Temperatures',
          data: [20, 30, 40, 50, 60],
          backgroundColor: '#ff6384'
        },
      ]
    },
    options: {
      maintainAspectRatio: true,
      responsive: true,
      scales: {
        yAxes: [{ stacked: true}]
      }
    }
  }); // new Chart


  var f = new Vue({
    el: '#weatherSearchForm',
    data: {
      inputDate: null,
      resetEnabled: false,
      forecastDates: [],
      getDateFailed: false,
      spinButtonsEnabled: false,
    },
    methods: {
      onEnter: function(e) {
        this.$http.get('/forecast/' + this.inputDate, {
          params: {
            limit: 5
          }
        }).then(function(res) {
          this.forecastDates = res.data;
          // Update the Chart.js chart
          chart.data.labels           = _.map(this.forecastDates, 'DATE');
          chart.data.datasets[0].data = _.map(this.forecastDates, 'TMIN');
          chart.data.datasets[1].data = _.map(this.forecastDates, 'TMAX');
          chart.update();
          // Clear errors and enable the reset button
          this.resetEnabled = true;
          this.getDateFailed = false;
        }, function(res) {
          this.getDateFailed = true;
          console.log("Error fetching '" + this.inputDate + "': " +
                      res.statusText);
        });
      }, // onenter
      enableResetButton: function(e) {
        this.resetEnabled = true;
      },
      resetForm: function(e) {
        this.inputDate = '';
        this.resetEnabled = false;
        this.getDateFailed = false;
        this.forecastDates = [];
        chart.data.datasets[0].data = [];
        chart.data.datasets[1].data = [];
        chart.update();
      },
      loadSampleData: function(e) {
        this.inputDate = '20130101';
        this.onEnter();
      }
    }, // methods
  });

  // var g = new Vue({
  //   el: '#weatherSearchGraph',
  //   data: {
  //     title: null,
  //     chartDimmed: false,
  //   }
  // })

</script>
